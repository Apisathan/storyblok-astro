---
import components from "virtual:storyblok-components";
import options from "virtual:storyblok-options";
import FallbackComponent from "./FallbackComponent.astro";
import camelcase from "camelcase";
import type { SbBlokData } from "./types";

interface Props {
  blok: SbBlokData;
  [prop: string]: unknown;
}

const { blok, ...props } = Astro.props;

/**
 * convert blok components to camel case to match vite-plugin-storyblok-components
 */
let key = camelcase(blok.component);

const componentFound: boolean = key in components;

if (!componentFound) {
  if (!options.enableFallbackComponent)
    throw new Error(
      `Component could not be found for blok "${blok.component}"! Is it defined in astro.config.mjs?`
    );
  else {
    key = "customFallback";
  }
}

const Component = components[key];
---

{componentFound && <Component blok={blok} {...props} />}
<!--TODO: simpfy logic here -->
{
  !componentFound && !options.customFallbackComponent && (
    <FallbackComponent blok={blok} />
  )
}
{
  !componentFound && options.customFallbackComponent && (
    <Component blok={blok} />
  )
}
